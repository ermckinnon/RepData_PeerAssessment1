View(stepsperinterval)
?tapply
stepsperinterval <- data.frame(date = unique(activity$interval),total_steps= tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
View(stepsperinterval)
View(stepsperinterval)
setwd("C:/R Programming Course/csps")
csps <- read.csv("csps_wellbeing results-R",na.strings = "NA")
csps <- read.csv("csps_wellbeing results-R.csv",na.strings = "NA")
View(csps)
View(csps)
?pairs
names <- names(csps)
grep(names,"2012")
grep
?grep
grep("2012",names)
data2012 <-csps[,names]
View(data2012)
View(data2012)
rm(data2012)
data2012 <-csps[,1]
data2012 <-csps[,1:3]
View(data2012)
View(data2012)
data2012 <-cbind[csps[,1:11],csps[,32:33],csps[,38]
]
data2012 <-cbind(csps[,1:11],csps[,32:33],csps[,38])
View(data2012)
View(data2012)
data2012 <-cbind([csps[,1:11],csps[,32],csps[,38])
View(data2012)
data2012 <-cbind([csps[,1:11],csps[,32],csps[,38])
data2012 <-cbind(csps[,1:11],csps[,32],csps[,38])
View(data2012)
View(data2012)
pairs(data2012)
?pairs
pairs(~ B26_2012  +  B27_2012, data = data2012)
data2012 <-cbind(csps[,1:11],csps[,32],csps[,38])
pairs(data2012)
pairs(~ W01_2012 + W02_2012 +	W03_2012 +	W04_2012 +	csps[, 32] +	csps[, 38], data = data2012)
pairs(~ 	W04_2012 +	csps[, 32] +	csps[, 38], data = data2012)
pairs(data2012)
pairs(~ B26_2012 + B28_2012 + B29_2012 +	W04_2012 +	csps[, 32] +	csps[, 38], data = data2012)
pairs(W04_2012 ~ B26_2012 + B28_2012 + B29_2012 +	csps[, 32] +	csps[, 38], data = data2012)
pairs(~ W01_2012 + W02_2012 +  W03_2012 +	W04_2012 + B26_2012 + B28_2012 + B29_2012 +	csps[, 32] +	csps[, 38], data = data2012)
names
data2013 <-cbind(csps[,12:21],csps[,34],csps[,39])
View(data2013)
View(data2013)
pairs(~ W01_2013 + W02_2013 +  W03_2013 +  W04_2013 + B26_2013 + B28_2013 + B29_2013 +	csps[, 34] +	csps[, 39], data = data2013)
data2014 <-cbind(csps[,22:31],csps[,36],csps[,40])
View(data2014)
View(data2014)
pairs(~ W01_2014 + W02_2014 +  W03_2014 +  W04_2014 + B26_2014 + B28_2014 + B29_2014 +  csps[, 39], data = data2014)
pairs(~ W01_2014 + W02_2014 +  W03_2014 +  W04_2014 + B26_2014 + B28_2014 + B29_2014 +  csps[, 40], data = data2014)
pairs(~ W04_2012 + W04_2013 + W04_2014  +  csps[, 40] + csps[,39] + csps[,38] , data = csps)
pairs(~ W04_2012 + W04_2013 + W04_2014  +  csps[, 40] + csps[,39] + csps[,38] , data = csps,panel=panel.smooth)
plot (csps[,38],csps$W04_2012)
plot (csps[,38],csps$W04_2012)
plot(csps$W03_2012,csps$W04_2012)
?plot
plot(csps$W03_2012,csps$W04_2012,type="p")
?plot
plot(csps$W03_2012)
plot(csps$W03_2012,type="p")
?plot
plot(csps$W03_2012,csps$W04_2012,pch=19)
plot(data2012$W03_2012,data2012$W04_2012,type="p")
plot(data2012$W03_2012,data2012$W04_2012)
pairs(~ W01_2013 + W02_2013, data = data2013)
setwd("C:/R Programming Course/csps")
csps <- read.csv("csps_wellbeing results-R.csv",na.strings = "NA")
names <- names(csps)
data2012 <-cbind(csps[,1:11],csps[,32],csps[,38])
data2013 <-cbind(csps[,12:21],csps[,34],csps[,39])
data2014 <-cbind(csps[,22:31],csps[,36],csps[,40])
View(data2012)
View(data2012)
with(data2012,plot(B26_2012,B26_2012))
class(data2012$B26_2012)
class(csps2012$B26_2012)
class(csps$B26_2012)
?read.csv
setwd("C:/R Programming Course/csps")
csps <- read.csv("csps_wellbeing results-R.csv",na.strings = "NA",as.is = !stringsAsFactors)
names <- names(csps)
data2012 <-cbind(csps[,1:11],csps[,32],csps[,38])
data2013 <-cbind(csps[,12:21],csps[,34],csps[,39])
data2014 <-cbind(csps[,22:31],csps[,36],csps[,40])
class(csps$B26_2012)
setwd("C:/R Programming Course/csps")
csps <- read.csv("csps_wellbeing results-R.csv",na.strings = "NA",as.is = !stringsAsFactors)
names <- names(csps)
data2012 <-cbind(csps[,1:11],csps[,32],csps[,38])
data2013 <-cbind(csps[,12:21],csps[,34],csps[,39])
data2014 <-cbind(csps[,22:31],csps[,36],csps[,40])
View(data2013)
View(data2013)
View(csps)
View(csps)
class(csps$B26_2012)
setwd("C:/R Programming Course/csps")
csps <- read.csv("csps_wellbeing results-R.csv",na.strings = "NA",as.is = !stringsAsFactors)
names <- names(csps)
data2012 <-cbind(csps[,1:11],csps[,32],csps[,38])
data2013 <-cbind(csps[,12:21],csps[,34],csps[,39])
data2014 <-cbind(csps[,22:31],csps[,36],csps[,40])
class(csps$B26_2012)
class(as.numeric(csps$B26_2012))
data2012 <-cbind(csps[,1],as.numeric(csps[,1:11]),as.numeric(csps[,32]),as.numeric(csps[,38]))
data2012 <-cbind(csps[,1],as.numeric(csps[,2:11]),as.numeric(csps[,32]),as.numeric(csps[,38]))
View(csps)
View(csps)
class(csps$B26_2012)
csps <- read.csv("csps_wellbeing results-R.csv",na.strings = "NA",stringsAsFactors=False)
for (i in 2:50)
{
csps[,i] <- as.numeric(as.character(csps[,i]))
}
for (i in 2:50)
{
print(i)
csps[,i] <- as.numeric(as.character(csps[,i]))
}
class(csps$B26_2012)
csps <- read.csv("csps_wellbeing results-R.csv",na.strings = "NA",)
for (i in 2:40)
{
print(i)
csps[,i] <- as.numeric(as.character(csps[,i]))
}
csps <- read.csv("csps_wellbeing results-R.csv",na.strings = "NA",)
for (i in 2:40)
{
csps[,i] <- as.numeric(as.character(csps[,i]))
}
View(csps)
View(csps)
library(dplyr)
change12_13 <- cbind(change_SCS = csps[, 39] - csps[, 38], change_anxiety = W04_2013 - W04_2012 )
change12_13 <- cbind(change_SCS = csps[, 39] - csps[, 38], change_anxiety = W04_2013 - W04_2012 )
change12_13 <- cbind(change_SCS = csps[, 39] - csps[, 38], change_anxiety = csps$W04_2013 - csps$W04_2012 )
View(change12_13)
change12_13 <- cbind(change_SCS = csps[, 39] - csps[, 38], change_anxiety = csps$W04_2013 - csps$W04_2012 )
with(data= change12_13, plot(change_SCS,change_anxiety))
abline(lm(change12_13$change_anxiety~change12_13$change_SCS), col="green")
summary(lm(change12_13$change_anxiety~change12_13$change_SCS))
with(data= change12_13, plot(change_SCS,change_anxiety))
case(change12_13$change_anxiety)
class(change12_13$change_anxiety)
change12_13 <- data.frame(cbind(change_SCS = csps[, 39] - csps[, 38], change_anxiety = csps$W04_2013 - csps$W04_2012 ))
class(change12_13$change_anxiety)
with(data= change12_13, plot(change_SCS,change_anxiety))
?pairs
?plot
setwd("C:/R Programming Course/csps")
csps <- read.csv("csps_wellbeing results-R2.csv",na.strings = "NA",)
for (i in 2:43)
{
csps[,i] <- as.numeric(as.character(csps[,i]))
}
#divide proprtion of female SCS with proprtion of female staff to get a representation measure
csps <-data.frame(csps,rep_12 = csps[, 38]/csps[, 41],rep_13 = csps[, 39]/csps[, 42],rep_14 = csps[, 40]/csps[, 43]     )
View(csps)
View(csps)
abline(lm(csps$W04_2014~csps$rep_12), col="green")
View(csps)
View(csps)
csps2 <- subset(csps, rep_12 <1)
csps2 <- subset(csps, rep_12 >0 & rep_12 <1)
rep_12>1
csps$rep_12>1
rep_12>1.0
csps$rep_12>1.0
csps2 <- subset(csps, Organisation !="Department for Culture, Media & Sport")
View(csps2)
View(csps2)
View(csps2)
View(csps2)
setwd("C:/R Programming Course/csps")
csps <- read.csv("csps_wellbeing results-R2.csv",na.strings = "NA",)
for (i in 2:43)
{
csps[,i] <- as.numeric(as.character(csps[,i]))
}
#divide proportion of female SCS with proprtion of female staff to get a representation measure
csps <-data.frame(csps,rep_12 = X2012_SCS/csps[, 41],rep_13 = X2013_SCS/csps[, 42],rep_14 = X2014_SCS/csps[, 43]     )
#summary(csps)
setwd("C:/R Programming Course/Repdata1")
library(xtable)
options(scipen=999) #supress exponential notation for numbers
data <- read.csv(unz("activity.zip", "activity.csv"),na.strings = "NA")
activity <- data.frame(steps = data$steps,date = as.Date(data$date),interval=data$interval)
rm(data)
totalsteps <- sum(activity$steps, na.rm = TRUE)
stepsperday <- data.frame(date = unique(activity$date),total_steps= tapply(activity$steps,activity$date,sum))
rownames(stepsperday) <- NULL
tab <- xtable(data.frame(totalsteps_per_day = stepsperday$total_steps))
print(tab,type="html")
mean_steps_perday <- mean(stepsperday$total_steps,na.rm = TRUE)
median_steps_perday <- median(stepsperday$total_steps,na.rm = TRUE)
hist(stepsperday$total_steps,
main="Histogram of Number of Steps per Day",
xlab="Total Steps per Day",
ylab="Number of Days")
abline(v=mean_steps_perday,lwd=2,col="Red")
?hist
mean_steps_perday <- mean(stepsperday$total_steps,na.rm = TRUE)
median_steps_perday <- median(stepsperday$total_steps,na.rm = TRUE)
hist(stepsperday$total_steps,breaks=10,
main="Histogram of Number of Steps per Day",
xlab="Total Steps per Day",
ylab="Number of Days")
abline(v=mean_steps_perday,lwd=2,col="Red")
hist(stepsperday$total_steps,breaks=4,
main="Histogram of Number of Steps per Day",
xlab="Total Steps per Day",
ylab="Number of Days")
abline(v=mean_steps_perday,lwd=2,col="Red")
hist(stepsperday$total_steps,breaks=9,
main="Histogram of Number of Steps per Day",
xlab="Total Steps per Day",
ylab="Number of Days")
abline(v=mean_steps_perday,lwd=2,col="Red")
max(stepsperday$total_steps)
hist(stepsperday$total_steps,breaks=4,
main="Histogram of Number of Steps per Day",
xlab="Total Steps per Day",
ylab="Number of Days")
abline(v=mean_steps_perday,lwd=2,col="Red")
hist(stepsperday$total_steps,breaks=9,
main="Histogram of Number of Steps per Day",
xlab="Total Steps per Day",
ylab="Number of Days",
xlim = 25000)
abline(v=mean_steps_perday,lwd=2,col="Red")
hist(stepsperday$total_steps,breaks=9,
main="Histogram of Number of Steps per Day",
xlab="Total Steps per Day",
ylab="Number of Days",
xlim = 0:25000)
abline(v=mean_steps_perday,lwd=2,col="Red")
hist(stepsperday$total_steps,breaks=9,
main="Histogram of Number of Steps per Day",
xlab="Total Steps per Day",
ylab="Number of Days",
xlim = range(0,25000))
abline(v=mean_steps_perday,lwd=2,col="Red")
stepsperinterval <- data.frame(interval = unique(activity$interval),
total_steps= tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
View(stepsperinterval)
View(stepsperinterval)
?plot
with(data = stepsperinterval, plot(interval,total_steps))
with(data = stepsperinterval, plot(interval,total_steps),type = "l")
with(data = stepsperinterval, plot(interval,total_steps,type = "l"))
Maxsteps <- data.frame(tapply(stepsperinterval$total_steps, max))
Maxsteps <- tapply(stepsperinterval$total_steps, max)
Maxsteps <- sapply(stepsperinterval$total_steps, max)
colMins(stepsperinterval$total_steps)
Maxsteps <- apply(stepsperinterval$total_steps, max)
tapply(activity$steps,max,na.rm=TRUE)
sapply(stepsperinterval, max, na.rm = TRUE)
max_obs <- subset(stepsperinterval, total_steps = sapply(stepsperinterval, max, na.rm = TRUE))
View(max_obs)
View(max_obs)
?subset
subset(stepsperinterval, total_steps > 206)
colmax <- sapply(stepsperinterval, max, na.rm = TRUE)
subset(stepsperinterval, total_steps = colmax[2])
colmax[2]
205>colmax[2]
class(colmax[2])
subset(stepsperinterval, total_steps == colmax[2])
subset(stepsperinterval, total_steps == sapply(stepsperinterval, max, na.rm = TRUE)[2])
max_steps <- subset(stepsperinterval, total_steps == sapply(stepsperinterval, max, na.rm = TRUE)[2])
View(max_steps)
View(max_steps)
stepsperinterval <- data.frame(interval = unique(activity$interval),
total_steps= tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
max_steps <- subset(stepsperinterval,
total_steps == sapply(stepsperinterval, max, na.rm = TRUE)[2])
with(data = stepsperinterval, plot(interval,total_steps,type = "l"))
abline(v=max_steps[2],lwd=2,col="Red")
max_steps[2]
abline(v=max_steps[1],lwd=2,col="Red")
with(data = stepsperinterval, plot(interval,total_steps,type = "l",lwd=2)
main="Mean Steps per Interval over the Period",
xlab="interval",
ylab="Mean Steps per Interval")
abline(v=max_steps[1],lwd=1,col="Red")
with(data = stepsperinterval, plot(interval,total_steps,type = "l",lwd=2)
xlab="interval",
ylab="Mean Steps per Interval")
abline(v=max_steps[1],lwd=1,col="Red")
with(data = stepsperinterval, plot(interval,total_steps,type = "l",lwd=2,
main="Mean Steps per Interval over the Period",
xlab="interval",
ylab="Mean Steps per Interval")
abline(v=max_steps[1],lwd=1,col="Red")
with(data = stepsperinterval, plot(interval,total_steps,type = "l",lwd=2,
main="Mean Steps per Interval over the Period",
xlab="interval",
ylab="Mean Steps per Interval"))
View(activity)
View(activity)
?is.na
miss <- sum(is.na(activity$steps))
?merge
View(stepsperinterval)
View(stepsperinterval)
row.names(stepsperinterval)<- Null
row.names(stepsperinterval)<- NULL
View(stepsperinterval)
View(stepsperinterval)
View(stepsperinterval)
View(stepsperinterval)
activity_imp <- merge(activity,stepsperinterval,by="interval")
View(activity_imp)
View(activity_imp)
stepsperinterval <- data.frame(interval = unique(activity$interval),
mean_steps= tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
max_steps <- subset(stepsperinterval,
mean_steps == sapply(stepsperinterval, max, na.rm = TRUE)[2])
with(data = stepsperinterval, plot(interval,total_steps,type = "l"))
abline(v=max_steps[1],lwd=2,col="Red")
miss <- sum(is.na(activity$steps))
activity_imp <- merge(activity,stepsperinterval,by="interval")
View(activity_imp)
View(activity_imp)
activity_imp <- data.frame(activity_imp, impute_steps = activity_imp$steps)
View(activity_imp)
View(activity_imp)
View(activity_imp)
nrows(activity_imp)
rows(activity_imp)
nrow(activity_imp)
for (i in 1:nrow(activity_imp)) {
print(i)
}
for (i in 1:nrow(activity_imp)) {
if(is.na(activity_imp$steps[i])){
activity_imp$impute_steps[i] = activity_imp$mean_steps[i]
}
}
is.na(activity_imp$steps[1])
for (i in 1:nrow(activity_imp)) {
if(is.na(activity_imp$steps[i])){
activity_imp$impute_steps[i] <- activity_imp$mean_steps[i]
}
}
View(activity_imp)
View(activity_imp)
rm(activity_imp)
miss <- sum(is.na(activity$steps))
activity_imp <- merge(activity,stepsperinterval,by="interval")
activity_imp <- data.frame(activity_imp, impute_steps = activity_imp$steps)
View(activity_imp)
View(activity_imp)
for (i in 1:nrow(activity_imp)) {
if(is.na(activity_imp$steps[i])){
activity_imp$impute_steps[i] <- activity_imp$mean_steps[i]
}
}
View(activity_imp)
View(activity_imp)
newstepsperday <- data.frame(date = unique(activity_imp$date),
total_steps= tapply(activity_imp$impute_steps,activity_imp$date,sum))
rownames(newstepsperday) <- NULL
new_mean_steps_perday <- mean(newstepsperday$total_steps,na.rm = TRUE)
new_median_steps_perday <- median(newstepsperday$total_steps,na.rm = TRUE)
hist(newstepsperday$total_steps,breaks=9,
main="Histogram of Number of Steps per Day",
xlab="Total Steps per Day",
ylab="Number of Days",
xlim = range(0,25000))
abline(v=new_mean_steps_perday,lwd=2,col="Blue")
activity_imp$day <- dow(activity_imp$date)
activity_imp$day <- weekdays(activity_imp$date)
View(activity_imp)
View(activity_imp)
activity_imp$day <- weekdays(activity_imp$date)
activity_imp$fday < as.factor(c("weekday","weekend"))
for (i in 1:nrow(activity_imp)) {
if(activity_imp$day[i] = "Saturday" | activity_imp$day[i] = "Sunday"){
activity_imp$fday[i] <- factor"weekend"
} else {activity_imp$fday[i] <- factor"weekday"}
}
activity_imp$day <- weekdays(activity_imp$date)
activity_imp$fday < as.factor(c("weekday","weekend"))
for (i in 1:nrow(activity_imp)) {
if(activity_imp$day[i] = "Saturday" | activity_imp$day[i] = "Sunday"){
activity_imp$fday[i] <- factor"weekend"
} else {activity_imp$fday[i] <- factor"weekday"
}
activity_imp$day <- weekdays(activity_imp$date)
activity_imp$fday < as.factor(c("weekday","weekend"))
for (i in 1:nrow(activity_imp)) {
if(activity_imp$day[i] = "Saturday" | activity_imp$day[i] = "Sunday"){
activity_imp$fday[i] <- factor"weekend"
} else {activity_imp$fday[i] <- factor"weekday"
}
}
activity_imp$day <- weekdays(activity_imp$date)
activity_imp$fday < as.factor(c("weekday","weekend"))
for (i in 1:nrow(activity_imp)) {
if(activity_imp$day[i] == "Saturday" | activity_imp$day[i] == "Sunday"){
activity_imp$fday[i] <- factor("weekend")
} else {activity_imp$fday[i] <- factor("weekday")
}
}
View(activity_imp)
View(activity_imp)
activity_imp$day <- weekdays(activity_imp$date)
activity_imp$fday < as.factor(c("weekday","weekend"))
for (i in 1:nrow(activity_imp)) {
if(activity_imp$day[i] == "Saturday" | activity_imp$day[i] == "Sunday"){
activity_imp$fday[i] = "weekend"
} else {activity_imp$fday[i] = "weekday"
}
}
activity_imp$day <- weekdays(activity_imp$date)
for (i in 1:nrow(activity_imp)) {
if(activity_imp$day[i] == "Saturday" | activity_imp$day[i] == "Sunday"){
activity_imp$fday[i] = "weekend"
} else {activity_imp$fday[i] = "weekday"
}
}
View(activity_imp)
View(activity_imp)
View(activity_imp)
View(activity_imp)
activity_imp$fday <- as.factor(activity_imp$fday)
class(activity_imp$fday)
levels(activity_imp$fday)
activity_impwd <- subset(activity_imp,activity_imp$fday="weekday")
activity_impwd <- subset(activity_imp,activity_imp$fday=="weekday")
activity_impwe <- subset(activity_imp,activity_imp$fday=="weekend")
View(activity_impwe)
View(activity_impwe)
View(activity_impwd)
View(activity_impwd)
stepsperintervalwd <- data.frame(interval = unique(activity_impwd$interval),
mean_steps= tapply(activity_impwd$impute_steps,activity_impwd$interval,mean,na.rm=TRUE))
row.names(stepsperintervalwd)<- NULL
stepsperintervalwe <- data.frame(interval = unique(activity_impwe$interval),
mean_steps= tapply(activity_impwe$impute_steps,activity_impwe$interval,mean,na.rm=TRUE))
row.names(stepsperintervalwe)<- NULL
xyplot(steps ~ interval| date,
data = activity_imp,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
library(lattice)
xyplot(steps ~ interval| date,
data = activity_imp,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
xyplot(impute_steps ~ interval| date,
data = activity_imp,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
library(lattice)
xyplot(impute_steps ~ interval| fday,
data = activity_imp,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
library(lattice)
xyplot(mean(impute_steps) ~ interval| fday,
data = activity_imp,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
?aggregate
meanSteps <- aggregate(activity_imp$impute_steps, list(as.numeric(activity_imp$interval),
activity_imp$fday),        FUN = "mean")
names(meanSteps) <- c("interval","weekDays", "avgSteps")
View(meanSteps)
View(meanSteps)
xyplot(meanSteps$avgSteps ~ meanSteps$interval | meanSteps$weekDays,
layout = c(1, 2), type = "l",
xlab = "Interval", ylab = "Number of steps")
library(lattice)
averagesteps <- aggregate(activity_imp$impute_steps, list(as.numeric(activity_imp$interval),
activity_imp$fday),        FUN = "mean")
names(averagesteps) <- c("interval","weekend", "meansteps")
xyplot(averagesteps$meansteps ~ averagesteps$interval | averagesteps$weekend,
layout = c(1, 2), type = "l",
xlab = "Interval",
ylab = "Mean number of steps")
library(lattice)
averagesteps <- aggregate(activity_imp$impute_steps,
list(as.numeric(activity_imp$interval),
activity_imp$fday), FUN = "mean")
names(averagesteps) <- c("interval","weekend", "meansteps")
xyplot(averagesteps$meansteps ~ averagesteps$interval | averagesteps$weekend,
layout = c(1, 2), type = "l",
xlab = "Interval",
ylab = "Mean number of steps")
View(stepsperday)
View(stepsperday)
View(averagesteps)
View(averagesteps)
